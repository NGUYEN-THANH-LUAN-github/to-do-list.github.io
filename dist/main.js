/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_UI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/UI */ \"./src/modules/UI.js\");\n\r\n\r\nwindow.addEventListener('DOMContentLoaded', _modules_UI__WEBPACK_IMPORTED_MODULE_0__.default.loadHomePage);\r\n// import { selectElement, selectAllElements, clearForm, initProject, createProjectPage, addOneTask, updateTask, getFromStorage, updateStorage } from './modules/functions'\r\n// import { Task, Project } from './modules/classes'\r\n\r\n\r\n\r\n// import { isToday } from 'date-fns'\r\n// import { customAlphabet } from 'nanoid'\r\n// const nanoid = customAlphabet('qwertyuiopasdfghjklzxcvbnm_', 15)\r\n\r\n// initProject();\r\n// let projectList = getFromStorage();\r\n\r\n// selectElement('[add-project-button]').addEventListener('click', (e) => {\r\n//     e.preventDefault();\r\n//     selectElement('[cancel-project-button]').click();\r\n//     const newProject = new Project(selectElement('#project-title').value);\r\n//     projectList.push(newProject);\r\n//     updateStorage(projectList);\r\n//     displayAll();\r\n//     selectElement('#project-title').value = \"\";\r\n// })\r\n\r\n// let currentProjectID = '';\r\n\r\n// function displayAll() {\r\n//     projectList = getFromStorage();\r\n//     selectElement('[project-list]').innerHTML = '';\r\n//     for (let project of projectList) {\r\n//         let projectName = project.title;\r\n//         selectElement('[project-list]').innerHTML += `<div class=\"task-view-as\" data-project-name id=\"${project.id}\"><i class=\"fas fa-tasks me-3\"></i><span>${projectName}</span></div>`\r\n//     }\r\n\r\n//     selectAllElements('[data-project-name]').forEach(DOMProject => {\r\n//         const project = projectList.filter(project => project.id === DOMProject.id)[0]\r\n\r\n//         DOMProject.addEventListener('click', (e) => {\r\n//             e.stopPropagation();\r\n\r\n//             currentProjectID = project.id;\r\n\r\n//             createProjectPage(project, projectList);\r\n\r\n//             const project_1 = getFromStorage().filter(project => project.id === DOMProject.id)[0];\r\n//             project_1.tasks.forEach(task => {\r\n//                 addOneTask(project_1, task.title, task.done, task.description, task.date, task.priority, task.id, projectList);\r\n//             })\r\n\r\n//             selectAllElements('#done').forEach(doneInput => doneInput.addEventListener('click', () => {\r\n//                 const taskID = doneInput.getAttribute('done-id');\r\n\r\n//                 projectList = getFromStorage();\r\n//                 const project_2 = projectList.filter(project_ => project_.id === project.id)[0];\r\n//                 const task = project_2.tasks.filter(task => task.id === taskID)[0];\r\n\r\n//                 if (doneInput.checked) {\r\n//                     selectElement(`.TASK${taskID}`).style.color = \"rgb(0,0,0,0.2)\";\r\n//                     selectElement(`.TASK${taskID}`).querySelector('.details').style.opacity = \"0.05\";\r\n//                     task.done = true;\r\n//                 } else if (doneInput.checked == false) {\r\n//                     selectElement(`.TASK${taskID}`).style.color = \"rgb(0,0,0,1)\";\r\n//                     selectElement(`.TASK${taskID}`).querySelector('.details').style.opacity = \"1\";\r\n//                     task.done = false;\r\n//                 }\r\n//                 updateStorage(projectList);\r\n\r\n//             }))\r\n\r\n//             selectAllElements(`[edit-task]`).forEach(edit => edit.addEventListener('submit', (e) => {\r\n//                 e.preventDefault();\r\n//                 const id = edit.getAttribute('task-id');\r\n\r\n//                 selectElement(`[${id}-cancel-update-button]`).click();\r\n\r\n//                 let [title, description, date, priority] = [selectElement(`#title${id}`).value, selectElement(`#description${id}`).value, selectElement(`#date${id}`).value, selectElement(`#priority${id}`).value];\r\n//                 updateTask(project, title, description, date, priority, id, projectList)\r\n\r\n//                 const task = project.tasks.filter(task => task.id === id)[0];\r\n//                 [task.title, task.description, task.date, task.priority] = [title, description, date, priority];\r\n\r\n\r\n\r\n//                 selectElement(`.TASK${id}`).querySelector('#done').addEventListener('click', () => {\r\n//                     const taskID = id;\r\n\r\n//                     projectList = getFromStorage();\r\n//                     const project_2 = projectList.filter(project_ => project_.id === project.id)[0];\r\n//                     const task = project_2.tasks.filter(task => task.id === taskID)[0];\r\n\r\n//                     if (selectElement(`.TASK${id}`).querySelector('#done').checked) {\r\n//                         selectElement(`.TASK${taskID}`).style.color = \"rgb(0,0,0,0.2)\";\r\n//                         selectElement(`.TASK${taskID}`).querySelector('.details').style.opacity = \"0.05\";\r\n//                         task.done = true;\r\n//                     } else if (selectElement(`.TASK${id}`).querySelector('#done').checked == false) {\r\n//                         selectElement(`.TASK${taskID}`).style.color = \"rgb(0,0,0,1)\";\r\n//                         selectElement(`.TASK${taskID}`).querySelector('.details').style.opacity = \"1\";\r\n//                         task.done = false;\r\n//                     }\r\n//                     updateStorage(projectList);\r\n//                 })\r\n\r\n//                 updateStorage(projectList);\r\n//             }))\r\n\r\n//             selectAllElements(\"[delete-task]\").forEach(button => button.addEventListener('click', () => {\r\n//                 const id = button.id;\r\n\r\n//                 selectElement(`.TASK${id}`).innerHTML = ``;\r\n\r\n//                 projectList = getFromStorage();\r\n//                 const project_4 = projectList.filter(project => project.id === DOMProject.id)[0];\r\n\r\n//                 project_4.tasks = project_4.tasks.filter(task => task.id != id);\r\n\r\n//                 updateStorage(projectList);\r\n//             }))\r\n//         })\r\n//     })\r\n\r\n// }\r\n\r\n// displayAll();\r\n\r\n// selectElement(`#add-task-form`).addEventListener('submit', (e) => {\r\n//     e.preventDefault();\r\n//     selectElement(`[cancel-button]`).click();\r\n\r\n//     projectList = getFromStorage();\r\n//     const project = projectList.filter(project => project.id === currentProjectID)[0]\r\n\r\n//     let [title, description, date, priority] = [selectElement(`#title`).value, selectElement(`#description`).value, selectElement(`#date`).value, selectElement(`#priority`).value];\r\n\r\n//     const newTask = new Task(project.title, title, description, date, priority);\r\n//     project.tasks.push(newTask);\r\n//     updateStorage(projectList);\r\n\r\n//     addOneTask(project, title, newTask.done, description, date, priority, newTask.id, projectList);\r\n\r\n\r\n//     selectAllElements(\"[delete-task]\").forEach(button => button.addEventListener('click', () => {\r\n//             const id = button.id;\r\n\r\n//             selectElement(`.TASK${id}`).innerHTML = ``;\r\n\r\n\r\n//             project.tasks = project.tasks.filter(task => task.id != id);\r\n\r\n//             updateStorage(projectList);\r\n//         }))\r\n//         // selectElement(`[done-id=${newTask.id}]`).addEventListener('click', () => {\r\n//         //     const id = newTask.id;\r\n\r\n//     //     // const task = project.tasks.filter(task => task.id === id)[0];\r\n\r\n//     //     projectList = getFromStorage();\r\n//     //     const project_2 = projectList.filter(project_ => project_.id === project.id)[0];\r\n//     //     const task = project_2.tasks.filter(task => task.id === id)[0];\r\n\r\n//     //     task.done = done.checked ? true : false;\r\n//     //     updateStorage(projectList);\r\n//     //     if (done.checked == true) {\r\n//     //         selectElement(`.TASK${id}`).style.color = \"rgb(0,0,0,0.2)\";\r\n//     //         selectElement(`.TASK${id}`).querySelector('.details').style.opacity = \"0.05\";\r\n//     //     } else {\r\n//     //         selectElement(`.TASK${id}`).style.color = \"rgb(0,0,0,1)\";\r\n//     //         selectElement(`.TASK${id}`).querySelector('.details').style.opacity = \"1\";\r\n//     //     }\r\n\r\n//     // })\r\n\r\n//     selectAllElements(`[edit-task]`).forEach(edit => edit.addEventListener('submit', (e) => {\r\n//         e.preventDefault();\r\n//         const id = edit.getAttribute('task-id');\r\n\r\n//         selectElement(`[${id}-cancel-update-button]`).click();\r\n\r\n//         let [title, description, date, priority] = [selectElement(`#title${id}`).value, selectElement(`#description${id}`).value, selectElement(`#date${id}`).value, selectElement(`#priority${id}`).value];\r\n//         updateTask(project, title, description, date, priority, id, projectList)\r\n\r\n//         const task = project.tasks.filter(task => task.id === id)[0];\r\n//         [task.title, task.description, task.date, task.priority] = [title, description, date, priority];\r\n\r\n//         // selectAllElements('#done').forEach(done => done.addEventListener('click', () => {\r\n//         //     const id = done.getAttribute('done-id');\r\n\r\n//         //     projectList = getFromStorage();\r\n//         //     const project_2 = projectList.filter(project_ => project_.id === project.id)[0];\r\n//         //     const task = project_2.tasks.filter(task => task.id === id)[0];\r\n//         //     done.addEventListener('change', () => {\r\n\r\n//         //         task.done = done.checked ? true : false;\r\n//         //         updateStorage(projectList);\r\n//         //         if (done.checked == true) {\r\n//         //             selectElement(`.TASK${id}`).style.color = \"rgb(0,0,0,0.2)\";\r\n//         //             selectElement(`.TASK${id}`).querySelector('.details').style.opacity = \"0.05\";\r\n//         //         } else {\r\n//         //             selectElement(`.TASK${id}`).style.color = \"rgb(0,0,0,1)\";\r\n//         //             selectElement(`.TASK${id}`).querySelector('.details').style.opacity = \"1\";\r\n//         //         }\r\n\r\n//         //     })\r\n//         // }))\r\n\r\n//         updateStorage(projectList);\r\n//     }))\r\n\r\n//     clearForm()\r\n// });\n\n//# sourceURL=webpack://to-do-list.github.io/./src/index.js?");

/***/ }),

/***/ "./src/modules/Project.js":
/*!********************************!*\
  !*** ./src/modules/Project.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Project)\n/* harmony export */ });\nclass Project {\r\n    constructor(name) {\r\n            this.name = name;\r\n            this.tasks = [];\r\n        }\r\n        // setName(name) {\r\n        //     this.name = name;\r\n        // }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    setTasks(tasks) {\r\n        this.tasks = tasks;\r\n    }\r\n    getTasks() {\r\n            return this.tasks;\r\n        }\r\n        // getTask(taskName) {\r\n        //     return this.tasks.find(task => task.getName() === taskName)\r\n        // }\r\n    addTask(task) {\r\n        this.tasks.push(task);\r\n    }\r\n}\n\n//# sourceURL=webpack://to-do-list.github.io/./src/modules/Project.js?");

/***/ }),

/***/ "./src/modules/Storage.js":
/*!********************************!*\
  !*** ./src/modules/Storage.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Storage)\n/* harmony export */ });\n/* harmony import */ var _TodoList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TodoList */ \"./src/modules/TodoList.js\");\n/* harmony import */ var _Project__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Project */ \"./src/modules/Project.js\");\n/* harmony import */ var _Task__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Task */ \"./src/modules/Task.js\");\n\r\n\r\n\r\n\r\nclass Storage {\r\n    static saveTodoList(todoList) {\r\n        localStorage.setItem('TodoList', JSON.stringify(todoList))\r\n    }\r\n    static getTodoList() {\r\n        const todoList = Object.assign(\r\n            new _TodoList__WEBPACK_IMPORTED_MODULE_0__.default(),\r\n            JSON.parse(localStorage.getItem('TodoList'))\r\n        );\r\n        todoList.setProjects(\r\n            todoList\r\n            .getProjects()\r\n            .map(project => Object.assign(new _Project__WEBPACK_IMPORTED_MODULE_1__.default(), project))\r\n        )\r\n        todoList\r\n            .getProjects()\r\n            .forEach(project => project.setTasks(\r\n                project\r\n                .getTasks()\r\n                .map(task => Object.assign(new _Task__WEBPACK_IMPORTED_MODULE_2__.default(), task))\r\n            ))\r\n        return todoList;\r\n    }\r\n    static addProject(newProjectName) {\r\n        const todoList = this.getTodoList();\r\n        todoList.addProject(newProjectName);\r\n        this.saveTodoList(todoList);\r\n    }\r\n    static getProject(projectName) {\r\n        const todoList = this.getTodoList();\r\n        return todoList.getProject(projectName);\r\n    }\r\n    static getTasksFromOneProject(projectName) {\r\n            const project = this.getProject(projectName);\r\n            return project.getTasks();\r\n        }\r\n        // static addTask(newTaskName, projectName) {\r\n\r\n    // }\r\n}\n\n//# sourceURL=webpack://to-do-list.github.io/./src/modules/Storage.js?");

/***/ }),

/***/ "./src/modules/Task.js":
/*!*****************************!*\
  !*** ./src/modules/Task.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Task)\n/* harmony export */ });\n// import { customAlphabet } from 'nanoid'\r\n// const nanoid = customAlphabet('qwertyuiopasdfghjklzxcvbnm_', 15)\r\nclass Task {\r\n    constructor(projectName, name, descript, priority, date = \"\") {\r\n        this.projectName = projectName;\r\n        this.name = name;\r\n        this.descript = descript;\r\n        this.priority = priority;\r\n        this.date = date;\r\n        this.done = false;\r\n    }\r\n    getProjectName() {\r\n        return this.projectName;\r\n    }\r\n    setName(name) {\r\n        this.name = name;\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    setDescript(descript) {\r\n        this.descript = descript;\r\n    }\r\n    getDescript() {\r\n        return this.descript;\r\n    }\r\n    setPriority(priority) {\r\n        this.priority = priority;\r\n    }\r\n    getPriority() {\r\n        return this.priority;\r\n    }\r\n    getIconPriority() {\r\n        let iconPriority = '';\r\n        switch (this.priority) {\r\n            case 'normal':\r\n                iconPriority = \"\";\r\n                break;\r\n            case 'important':\r\n                iconPriority = \"flag\";\r\n                break;\r\n            case 'urgent':\r\n                iconPriority = \"exclamation-triangle\"\r\n                break;\r\n        }\r\n        return iconPriority;\r\n    }\r\n    setDate(date) {\r\n        this.date = date;\r\n    }\r\n    getDate() {\r\n        return this.date;\r\n    }\r\n    getDateFormatted() {\r\n        return this.date.split('-').join('/')\r\n    }\r\n    setDone(done) {\r\n        this.done = done;\r\n    }\r\n    getDone() {\r\n        return this.done;\r\n    }\r\n    getDoneCheckboxState() {\r\n        let doneCheckboxState = '';\r\n        switch (this.done) {\r\n            case 'true':\r\n                doneCheckboxState = \"checked\";\r\n                break;\r\n            case 'false':\r\n                doneCheckboxState = \"\";\r\n                break;\r\n        }\r\n        return doneCheckboxState;\r\n    }\r\n    getIDForDetailsButton() {\r\n        return this.getName().split(' ').join('');\r\n    }\r\n}\n\n//# sourceURL=webpack://to-do-list.github.io/./src/modules/Task.js?");

/***/ }),

/***/ "./src/modules/TodoList.js":
/*!*********************************!*\
  !*** ./src/modules/TodoList.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TodoList)\n/* harmony export */ });\n/* harmony import */ var _Project__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Project */ \"./src/modules/Project.js\");\n/* harmony import */ var _Task__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Task */ \"./src/modules/Task.js\");\n\r\n\r\n\r\nclass TodoList {\r\n    constructor() {\r\n        this.projects = [];\r\n        this.projects.push(new _Project__WEBPACK_IMPORTED_MODULE_0__.default(\"All\"));\r\n        this.projects.push(new _Project__WEBPACK_IMPORTED_MODULE_0__.default(\"Today\"));\r\n        this.projects.push(new _Project__WEBPACK_IMPORTED_MODULE_0__.default(\"This Week\"));\r\n    }\r\n    setProjects(projects) {\r\n        this.projects = projects;\r\n    }\r\n    getProjects() {\r\n        return this.projects;\r\n    }\r\n    addProject(newProjectName) {\r\n        this.projects.push(new _Project__WEBPACK_IMPORTED_MODULE_0__.default(newProjectName));\r\n    }\r\n    getProject(projectName) {\r\n        return this.projects.find(project => project.getName() === projectName)\r\n    }\r\n}\n\n//# sourceURL=webpack://to-do-list.github.io/./src/modules/TodoList.js?");

/***/ }),

/***/ "./src/modules/UI.js":
/*!***************************!*\
  !*** ./src/modules/UI.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UI)\n/* harmony export */ });\n/* harmony import */ var _Storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Storage */ \"./src/modules/Storage.js\");\n/* harmony import */ var _Task__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Task */ \"./src/modules/Task.js\");\n/* harmony import */ var _UIEffects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UIEffects */ \"./src/modules/UIEffects.js\");\n\r\n\r\n\r\n\r\nclass UI {\r\n    static loadHomePage() {\r\n        (0,_UIEffects__WEBPACK_IMPORTED_MODULE_2__.performUIEffects)();\r\n        UI.loadProjects();\r\n        UI.initButtonAddProject();\r\n    }\r\n\r\n    static loadProjects() {\r\n        const todoList = _Storage__WEBPACK_IMPORTED_MODULE_0__.default.getTodoList();\r\n        todoList.getProjects().forEach(project => {\r\n            if (project.getName() === 'All' ||\r\n                project.getName() === 'Today' ||\r\n                project.getName() === 'This Week')\r\n                return;\r\n            UI.addProjectToUI(project.getName());\r\n        })\r\n        UI.initAllButtonProjects();\r\n    }\r\n\r\n    static initButtonAddProject() {\r\n        const buttonAddProject = document.querySelector('[button-add-project]');\r\n        buttonAddProject.addEventListener('click', this.addProject);\r\n    }\r\n    static initButtonProject(projectName) {\r\n        const buttonProjects = Array.from(document.querySelectorAll('[project]'));\r\n        const buttonProject = buttonProjects.find(button => button.querySelector('span').innerText === projectName);\r\n        buttonProject.addEventListener('click', this.loadProject)\r\n    }\r\n    static initAllButtonProjects() {\r\n        document.querySelectorAll('[project]')\r\n            .forEach(project => {\r\n                const projectName = project.querySelector('span').innerText;\r\n                UI.initButtonProject(projectName);\r\n            })\r\n    }\r\n    static addProject(e) {\r\n        e.preventDefault();\r\n        const newProjectName = document.querySelector('[input-project-name]').value;\r\n\r\n        if (!UI.checkIfProjectNameAlreadyExists(newProjectName)) {\r\n            _Storage__WEBPACK_IMPORTED_MODULE_0__.default.addProject(newProjectName);\r\n            UI.addProjectToUI(newProjectName);\r\n            UI.initAllButtonProjects();\r\n\r\n            UI.clearAddProjectInput();\r\n            document.querySelector('[button-cancel-project]').click()\r\n        }\r\n    }\r\n    static checkIfProjectNameAlreadyExists(projectName) {\r\n        const todoList = _Storage__WEBPACK_IMPORTED_MODULE_0__.default.getTodoList();\r\n        if (todoList.getProjects().some(project => project.getName().toLowerCase() === projectName.toLowerCase())) {\r\n            alert('Project name already exists.')\r\n            return true;\r\n        } else return false;\r\n    }\r\n    static addProjectToUI(projectName) {\r\n        const projectList = document.querySelector('[project-list]');\r\n        projectList.innerHTML += `\r\n        <div class=\"task-view-as\" project><i class=\"fas fa-tasks me-3\"></i><span>${projectName}</span></div>\r\n        `\r\n    }\r\n    static loadProject() {\r\n        const projectTitle = this.querySelector('span').innerText;\r\n        UI.loadProjectPageContent(projectTitle);\r\n        UI.loadButtonAddNewTask();\r\n        UI.addAllTasksOfThisProjectToUI();\r\n        UI.closeNav();\r\n    }\r\n    static closeNav() {\r\n        const x = window.matchMedia(\"(max-width: 950px)\");\r\n        if (x.matches) document.querySelector('.openNav').click();\r\n    }\r\n    static loadProjectPageContent(projectTitle) {\r\n        const projectContentPage = document.querySelector('.content');\r\n        projectContentPage.innerHTML = ''\r\n        projectContentPage.innerHTML += `\r\n            <div class=\"view-as d-flex justify-content-between\">\r\n                <span project-name>${projectTitle}</span>\r\n                <div class=\"dropstart\">\r\n                    <button type=\"button\" class=\"btn dropdown-toggle shadow-none \" data-bs-toggle=\"dropdown\"><span>Filter</span>: <em class=\"me-1\" sort-by>all</em></button>\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li class=\"dropdown-item\" data-sort>all</li>\r\n                        <li class=\"dropdown-item\" data-sort>incomplete</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"add-task mb-2\" data-bs-toggle=\"modal\" data-bs-target=\"#add-task\" button-add-new-task>\r\n                <i class=\"fas fa-plus me-3\"><span>New Task</span></i>\r\n            </div>\r\n\r\n            <div class=\"task-list\">\r\n\r\n            </div>\r\n        `\r\n    }\r\n    static loadButtonAddNewTask() {\r\n        const buttonAddNewTask = document.querySelector('[button-add-new-task]');\r\n        buttonAddNewTask.addEventListener('click', this.addOneTask)\r\n    }\r\n    static addOneTask(e) {\r\n        e.preventDefault();\r\n\r\n        UI.saveTaskToStorage();\r\n        UI.addAllTasksOfThisProjectToUI();\r\n\r\n        document.querySelector('[button-cancel-add-task]').click();\r\n        UI.clearInputsOfAddTask();\r\n    }\r\n    static saveTaskToStorage() {\r\n        const taskName = document.querySelector('[task-name]').value;\r\n        const taskDescript = document.querySelector('[task-descript]').value;\r\n        const taskDate = document.querySelector('[task-date]').value;\r\n        const taskPriority = document.querySelector('[task-priority]').value;\r\n\r\n        const todoList = _Storage__WEBPACK_IMPORTED_MODULE_0__.default.getTodoList();\r\n        const thisProjectName = UI.getCurrentProjectName();\r\n        const thisProject = todoList.getProject(thisProjectName);\r\n        thisProject.addTask(new _Task__WEBPACK_IMPORTED_MODULE_1__.default(thisProjectName, taskName, taskDescript, taskPriority, taskDate));\r\n        _Storage__WEBPACK_IMPORTED_MODULE_0__.default.saveTodoList(todoList);\r\n    }\r\n    static addAllTasksOfThisProjectToUI() {\r\n        const tasks = _Storage__WEBPACK_IMPORTED_MODULE_0__.default.getTasksFromOneProject(UI.getCurrentProjectName());\r\n\r\n        const taskList = document.querySelector('.task-list');\r\n        taskList.innerHTML = '';\r\n        tasks.forEach(task => {\r\n            taskList.innerHTML += `\r\n            <div TASK>\r\n                <div class=\"task\">\r\n\r\n                    <div class=\"first-group\"><input class=\"form-check-input shadow-none me-3\" type=\"checkbox\" id=\"done\" ${task.getDoneCheckboxState()}/><span>${task.getName()}</span></div>\r\n                    <div class=\"second-group\">\r\n                        <i class=\"fas fa-${task.getIconPriority()}\"></i>\r\n\r\n                        <button type=\"button\" class=\"details btn btn-secondary shadow-none\" data-bs-toggle=\"collapse\" data-bs-target=\"#_${task.getIDForDetailsButton()}\">Details</button>\r\n\r\n                        <span class=\"date\">${task.getDateFormatted()}</span>\r\n\r\n                        <i class=\"fas fa-edit edit\" data-bs-toggle=\"modal\" title=\"edit\" data-bs-target=\"#edit-task\"></i>\r\n\r\n                        <i class=\"fas fa-trash-alt delete\" delete-task title=\"delete\"></i>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"collapse\" id=\"_${task.getIDForDetailsButton()}\">\r\n                    <div class=\"card card-body rounded-0 border-top-0 border-bottom-0 pt-2 pb-0\" style=\"background-color: oldlace;\">\r\n                        <p class=\"mb-0\"><b>Project: </b>${task.getProjectName()}</p>\r\n                        <p class=\"mb-0\"><b>Date: </b>${task.getDateFormatted()}</p>\r\n                        <p class=\"mb-0\"><b>Priority: </b>${task.getPriority()} <i class=\"fas fa-${task.getIconPriority()}\"></i></p>\r\n                        <p class=\"mb-0\">\r\n                            <b>Description: </b>${task.getDescript()}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>`\r\n        })\r\n    }\r\n    static clearInputsOfAddTask() {\r\n        document.querySelector('[task-name]').value = '';\r\n        document.querySelector('[task-descript]').value = '';\r\n        document.querySelector('[task-date]').value = '';\r\n        document.querySelector('[task-priority]').value = '';\r\n    }\r\n    static getCurrentProjectName() {\r\n        return document.querySelector('[project-name]').innerText\r\n    }\r\n    static clearAddProjectInput() {\r\n        document.querySelector('[input-project-name]').value = '';\r\n    }\r\n}\n\n//# sourceURL=webpack://to-do-list.github.io/./src/modules/UI.js?");

/***/ }),

/***/ "./src/modules/UIEffects.js":
/*!**********************************!*\
  !*** ./src/modules/UIEffects.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"performUIEffects\": () => (/* binding */ performUIEffects)\n/* harmony export */ });\nconst performUIEffects = function() {\r\n    (function dropDownEffect() {\r\n        const dataProjectsDropdown = document.querySelector('[data-projects-dropdown]');\r\n        const caret = dataProjectsDropdown.querySelector('i');\r\n\r\n        dataProjectsDropdown.addEventListener('click', () => {\r\n            caret.classList.toggle(`fa-caret-down`);\r\n            caret.classList.toggle(`fa-caret-up`);\r\n        })\r\n    })();\r\n\r\n    (function navEffect() {\r\n        const aside = document.querySelector('aside');\r\n        document.querySelector('.openNav').addEventListener('click', () => {\r\n            if (aside.style.marginLeft === \"-250px\") {\r\n                aside.style.marginLeft = \"0\";\r\n            } else {\r\n                aside.style.marginLeft = \"-250px\";\r\n            }\r\n        });\r\n\r\n        const mq = window.matchMedia('(max-width: 950px)')\r\n        document.querySelector('section').addEventListener('click', () => {\r\n            if (mq.matches) {\r\n                aside.style.marginLeft = \"-250px\";\r\n            }\r\n        })\r\n\r\n        function checkMediaWidthAndDoTasks(x) {\r\n            if (x.matches) { aside.style.marginLeft = \"-250px\"; } else { aside.style.marginLeft = \"0px\"; }\r\n        }\r\n        checkMediaWidthAndDoTasks(mq);\r\n        mq.addListener(() => {\r\n            checkMediaWidthAndDoTasks(mq);\r\n        })\r\n    })();\r\n\r\n    (function sortSelectEffect() {\r\n        const dataSorts = document.querySelectorAll('[data-sort]');\r\n        const sortBy = document.querySelector('[sort-by]');\r\n        dataSorts.forEach(e => e.addEventListener('click', () => {\r\n            sortBy.innerText = e.innerText;\r\n        }))\r\n    })();\r\n\r\n};\r\n\r\n// export function deleteProjectEffect() {\r\n//     const dataProjectNames = document.querySelectorAll('[data-project-name]');\r\n//     dataProjectNames.forEach(e => e.addEventListener('mouseover', () => {\r\n//         const icon = e.querySelector('i');\r\n//         icon.style.cssText = \"color:rgba(0, 0, 0, 0.2);\"\r\n//         icon.classList.replace('fa-tasks', 'fa-trash-alt');\r\n\r\n//     }))\r\n//     dataProjectNames.forEach(e => e.addEventListener('mouseout', () => {\r\n//         const icon = e.querySelector('i');\r\n//         icon.classList.replace('fa-trash-alt', 'fa-tasks');\r\n//         icon.style.color = \"black\"\r\n//     }))\r\n// };\n\n//# sourceURL=webpack://to-do-list.github.io/./src/modules/UIEffects.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;